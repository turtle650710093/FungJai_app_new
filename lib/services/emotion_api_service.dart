import 'dart:convert';
import 'dart:io';
import 'package:http/http.dart' as http;
import 'prediction_result.dart';

class EmotionApiService {
  static const String _apiUrl = "http://192.168.1.123:5000/predict";

  Future<PredictionResult> predictEmotion(String audioPath) async {
    return await predict(audioPath);
  }

  Future<PredictionResult> predict(String audioPath) async {
    print("üåê ApiService: Starting prediction for $audioPath");
    
    final file = File(audioPath);
    if (!await file.exists()) {
      print("‚ùå ApiService: File not found");
      throw Exception("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á");
    }

    try {
      final request = http.MultipartRequest('POST', Uri.parse(_apiUrl));
      request.files.add(
        await http.MultipartFile.fromPath('audio', audioPath),
      );

      print("üì§ ApiService: Sending request...");
      final streamedResponse = await request.send();

      if (streamedResponse.statusCode == 200) {
        final responseBody = await streamedResponse.stream.bytesToString();
        print("‚úÖ ApiService: Success");
        
        final decodedJson = json.decode(responseBody);
        return PredictionResult.fromJson(decodedJson);
      } else {
        print("‚ùå ApiService: Error ${streamedResponse.statusCode}");
        throw Exception("API ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ status ${streamedResponse.statusCode}");
      }
    } on SocketException {
      print("‚ùå ApiService: Connection failed");
      throw SocketException("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå");
    } catch (e) {
      print("‚ùå ApiService: Error - $e");
      rethrow;
    }
  }
}